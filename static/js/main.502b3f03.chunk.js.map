{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shift","images","props","setShift","step","frameSize","infinite","setState","length","this","itemWidth","animationDuration","className","type","onClick","style","width","map","image","index","src","alt","String","right","transitionDuration","Component","App","htmlFor","value","id","min","max","onChange","e","currentTarget","name","checked","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.502b3f03.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  shift: number,\n  images: string[],\n\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    shift: 0,\n    images: this.props.images,\n  };\n\n  setShift = (step: number) => {\n    const { frameSize, images, infinite } = this.props;\n\n    this.setState((state: Readonly<State>) => {\n      if (state.shift + step >= images.length - frameSize) {\n        return ({\n          shift: (state.shift === images.length - frameSize) && infinite\n            ? 0 : images.length - frameSize,\n        });\n      }\n\n      if (state.shift + step <= 0) {\n        return ({\n          shift: state.shift === 0 && infinite ? images.length - frameSize : 0,\n        });\n      }\n\n      return ({ shift: state.shift + step });\n    });\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          data-cy=\"prev\"\n          className=\"button\"\n          onClick={() => this.setShift(-step)}\n        >\n          Prev\n        </button>\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          {this.state.images.map((image: string, index : number) => (\n            <li key={image}>\n              <img\n                className=\"Carousel__item\"\n                src={image}\n                alt={String(index + 1)}\n                style={\n                  {\n                    width: itemWidth,\n                    right: `${this.state.shift * itemWidth}px`,\n                    transitionDuration: `${animationDuration}ms`,\n                  }\n                }\n              />\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          className=\"button\"\n          data-cy=\"next\"\n          onClick={() => this.setShift(step)}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images `}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          infinite={infinite}\n          animationDuration={animationDuration}\n        />\n        <form className=\"form\">\n          <label htmlFor=\"stepId\">\n            <input\n              type=\"range\"\n              value={step}\n              id=\"stepId\"\n              min={1}\n              max={9}\n              onChange={(e) => this.setState({ step: +e.currentTarget.value })}\n            />\n            {'Slide Step '}\n            <span className=\"form__input-value\">{step}</span>\n          </label>\n\n          <label htmlFor=\"itemId\">\n            <input\n              id=\"itemId\"\n              type=\"range\"\n              name=\"itemWidth\"\n              min={50}\n              max={390}\n              step={2}\n              value={itemWidth}\n              onChange={(e) => this.setState({\n                itemWidth: +e.currentTarget.value,\n              })}\n            />\n            {'Image Width '}\n            <span className=\"form__input-value\">{itemWidth}</span>\n          </label>\n\n          <label>\n            <input\n              type=\"range\"\n              min={500}\n              max={5000}\n              step={1000}\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={(e) => this.setState({\n                animationDuration: +e.currentTarget.value,\n              })}\n            />\n            {'Animation Duration '}\n            <span className=\"form__input-value\">{animationDuration}</span>\n          </label>\n\n          <label htmlFor=\"frameId\">\n            <input\n              id=\"frameId\"\n              type=\"range\"\n              value={frameSize}\n              name=\"frameSize\"\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(e) => this.setState({\n                frameSize: +e.currentTarget.value,\n              })}\n            />\n            {'Frame Size '}\n            <span className=\"form__input-value\">{ frameSize }</span>\n          </label>\n\n          <label\n            htmlFor=\"checkbox\"\n            className=\"checkbox-label\"\n          >\n            <input\n              className=\"form__input-checkbox\"\n              type=\"checkbox\"\n              id=\"checkbox\"\n              checked={infinite}\n              onChange={\n                () => this.setState(\n                  prevState => ({ infinite: !prevState.infinite }),\n                )\n              }\n            />\n            <div className={`form__input-fake-checkbox ${infinite ? 'png' : ''}`}> </div>\n            infinite\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}